name: Cypress acceptance tests
description: "Run the Cypress acceptance tests for a Renku deployment"
inputs:
  e2e-folder:
    description: "The folder containing the Cypress tests"
    required: false
    default: "cypress/e2e/"
  e2e-infrastructure-check:
    description: "The Cypress test to check the infrastructure"
    required: false
    default: "verifyInfrastructure"
  e2e-suffix:
    description: "The suffix of the Cypress tests"
    required: false
    default: ".cy.ts"
  e2e-target:
    description: "The target spec to execute"
    required: true
  renku-path:
    description: "The path to the Renku repository."
    required: false
    default: "renku"
  renku-reference:
    description: "The reference (e.g., branch/commit/tag) on the Renku repository to check out."
    required: false
    default: "master"
  renku-release:
    description: "The name of the Renku helm release."
    required: true
  renku-repository:
    description: "The name of the Renku repository."
    required: false
    default: "SwissDataScienceCenter/renku"
  settings-browser:
    description: "The browser to use for the Cypress tests"
    required: false
    default: "chrome"
  settings-working-directory:
    description: "The working directory for the Cypress tests"
    required: false
    default: "renku/cypress-tests"
  test-user-email:
    description: "The email address of the test user"
    required: false
    default: "renku@datascience.ch"
  test-user-firstname:
    description: "The first name of the test user"
    required: false
    default: "Renku"
  test-user-lastname:
    description: "The last name of the test user"
    required: false
    default: "Bot"
  test-user-password:
    description: "The password of the test user"
    required: true
  test-user-username:
    description: "The username of the test user"
    required: false
    default: "renku-test"

runs:
  using: "composite"
  steps:
    - name: Checkout Renku repository
      uses: actions/checkout@v4
      with:
        repository: ${{ inputs.renku-repository }}
        path: ${{ inputs.renku-path }}
        ref: ${{ inputs.renku-reference }}

    - name: Check e2e target spec exists
      shell: bash
      run: |
        echo "Looking for tests matching '${{ inputs.e2e-target }}'"
        match=$(find "${{ inputs.settings-working-directory }}/${{ inputs.e2e-folder }}" -type f -maxdepth 1 -name "${{ inputs.e2e-target }}${{ inputs.e2e-suffix }}" | wc -l)
        if [ "$match" -eq "0" ]; then
          echo "::error::No test files found for e2e target: ${{ inputs.e2e-target }}"
          exit 1
        fi

    - name: Setup Node v22
      uses: actions/setup-node@v4
      with:
        node-version: 22
        cache: npm
        cache-dependency-path: ${{ inputs.settings-working-directory }}

    - name: Run target Cypress test
      uses: cypress-io/github-action@v6
      id: cypress-acceptance-tests
      env:
        BASE_URL: https://${{ inputs.renku-release }}.dev.renku.ch
        TEST_EMAIL: ${{ inputs.test-user-email }}
        TEST_FIRST_NAME: ${{ inputs.test-user-firstname }}
        TEST_LAST_NAME: ${{ inputs.test-user-lastname }}
        TEST_PASSWORD: ${{ inputs.test-user-password }}
        TEST_USERNAME: ${{ inputs.test-user-username }}
      with:
        browser: ${{ inputs.settings-browser }}
        spec: |
          ${{ inputs.e2e-folder }}${{ inputs.e2e-infrastructure-check }}${{ inputs.e2e-suffix }}
          ${{ inputs.e2e-folder }}${{ inputs.e2e-target }}${{ inputs.e2e-suffix }}
        working-directory: ${{ inputs.settings-working-directory }}

    - name: Create artifact file name
      id: sanitize
      if: failure()
      shell: bash
      run: echo "sanitized=$(echo '${{ inputs.e2e-target }}' | sed 's/[\/]/_/g')" >> $GITHUB_OUTPUT

    - name: Upload Cypress screenshot
      if: failure()
      id: upload-screenshort
      uses: actions/upload-artifact@v4
      with:
        name: Cypress screenshot - ${{ steps.sanitize.outputs.sanitized }} - ${{ github.run_id }}
        path: ${{ inputs.settings-working-directory }}/cypress/screenshots
        retention-days: 7

    - name: Upload Cypress video
      id: upload-video
      if: failure()
      uses: actions/upload-artifact@v4
      with:
        name: Cypress video - ${{ steps.sanitize.outputs.sanitized }} - ${{ github.run_id }}
        path: ${{ inputs.settings-working-directory }}/cypress/videos
        retention-days: 3
